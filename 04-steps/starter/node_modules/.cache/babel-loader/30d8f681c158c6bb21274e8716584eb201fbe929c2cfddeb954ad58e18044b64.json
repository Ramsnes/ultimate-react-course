{"ast":null,"code":"var _jsxFileName = \"/Users/morten/Documents/repos/private/ultimate-react-course/04-steps/starter/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst messages = [\"Learn React ‚öõÔ∏è\", \"Apply for jobs üíº\", \"Invest your new income ü§ë\"];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Steps, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nfunction Steps() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [isOpen, setIsOpen] = useState(true);\n  function handlePrevious() {\n    if (step > 1) setStep(s => s - 1);\n  }\n  function handleNext() {\n    if (step < 3) setStep(s => s + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close\",\n      onClick: () => setIsOpen(is => !is),\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isOpen &&\n    /*#__PURE__*/\n    // Wrap everything in 'JS-mode for conditional'\n    _jsxDEV(\"div\", {\n      className: \"steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: step >= 1 ? \"active\" : \"\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: step >= 2 ? \"active\" : \"\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: step >= 3 ? \"active\" : \"\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: [\"Step \", step, \": \", messages[step - 1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          textColor: \"#fff\",\n          bgColor: \"#7950f2\",\n          onClick: handlePrevious,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC48 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          textColor: \"#fff\",\n          bgColor: \"#7950f2\",\n          onClick: handleNext,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC49 Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n// children prop is a predetermined prop in React that let's ut pass any jsx into a non-closing componen and fill that hole\n_s(Steps, \"lY6Y6OgA1ykwiOxUlvmVfg+enJI=\");\n_c2 = Steps;\nfunction Button({\n  textColor,\n  bgColor,\n  onClick,\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      backgroundColor: bgColor,\n      color: textColor\n    },\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Button;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Steps\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","messages","App","Steps","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","step","setStep","isOpen","setIsOpen","handlePrevious","s","handleNext","children","className","onClick","is","Button","textColor","bgColor","_c2","style","backgroundColor","color","_c3","$RefreshReg$"],"sources":["/Users/morten/Documents/repos/private/ultimate-react-course/04-steps/starter/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst messages = [\n  \"Learn React ‚öõÔ∏è\",\n  \"Apply for jobs üíº\",\n  \"Invest your new income ü§ë\",\n];\n\nexport default function App() {\n  return <Steps />;\n}\n\nfunction Steps() {\n  const [step, setStep] = useState(1);\n  const [isOpen, setIsOpen] = useState(true);\n\n  function handlePrevious() {\n    if (step > 1) setStep((s) => s - 1);\n  }\n\n  function handleNext() {\n    if (step < 3) setStep((s) => s + 1);\n  }\n\n  return (\n    <>\n      <button className=\"close\" onClick={() => setIsOpen((is) => !is)}>\n        &times;\n      </button>\n      {/* if true, second part will be return. If false, only false will be returned. Changing 'const [isOpen, setIsOpen] = useState(true); to false removes everything wrapped {}' */}\n      {isOpen && (\n        // Wrap everything in 'JS-mode for conditional'\n        <div className=\"steps\">\n          <div className=\"numbers\">\n            <div className={step >= 1 ? \"active\" : \"\"}>1</div>\n            <div className={step >= 2 ? \"active\" : \"\"}>2</div>\n            <div className={step >= 3 ? \"active\" : \"\"}>3</div>\n          </div>\n\n          <p className=\"message\">\n            {/* step -1 bcus index */}\n            Step {step}: {messages[step - 1]}\n          </p>\n\n          <div className=\"buttons\">\n            <Button textColor=\"#fff\" bgColor=\"#7950f2\" onClick={handlePrevious}>\n              <span>üëà Previous</span>\n            </Button>\n\n            <Button textColor=\"#fff\" bgColor=\"#7950f2\" onClick={handleNext}>\n              <span>üëâ Next</span>\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\n// children prop is a predetermined prop in React that let's ut pass any jsx into a non-closing componen and fill that hole\nfunction Button({ textColor, bgColor, onClick, children }) {\n  return (\n    <button\n      style={{ backgroundColor: bgColor, color: textColor }}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}